/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    
    // Repositorio jitpack.io donde están los accesos a las versiones de la librería entrada desde github
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.junit.platform:junit-platform-suite-api:1.9.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-suite-engine:1.9.1'
      
    // Entrada para que el repositorio jitpack.io sepa acceder a la localización de librería entrada
    api 'com.github.JRJimenezReyes:entrada:1.0.3'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

apply plugin: 'application'

mainClassName = 'org.iesalandalus.programacion.clientesempresa.MainApp'

jar {
	manifest {
		attributes 'Main-Class': 'org.iesalandalus.programacion.clientesempresa.MainApp'
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } 
	}
}
